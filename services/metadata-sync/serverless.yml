# "org" ensures this Service is used with the correct Serverless Framework Access Key.
org: syncfow
# "service" is the name of this project. This will also be added to your AWS resource names.
service: metadata-sync

provider:
  name: aws
  runtime: nodejs20.x
  region: us-east-1
  stage: ${opt:stage, 'dev'}
  environment:
    #SUPABASE_URL: ${env.SUPABASE_URL}
    #SUPABASE_SERVICE_ROLE_KEY: ${env.SUPABASE_SERVICE_ROLE_KEY}
    SUPABASE_URL: http://127.0.0.1:54321
    SUPABASE_SERVICE_ROLE_KEY: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZS1kZW1vIiwicm9sZSI6InNlcnZpY2Vfcm9sZSIsImV4cCI6MTk4MzgxMjk5Nn0.EGIM96RAZx35lJzdJsyH-qQwv8Hdp7fsn3W0YpN81IU
    RATE_LIMIT_TABLE: ${env.RATE_LIMIT_TABLE}

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - "logs:CreateLogGroup"
            - "logs:CreateLogStream"
            - "logs:PutLogEvents"
          Resource: "arn:aws:logs:*:*:*"

plugins:
  - serverless-plugin-typescript
  - serverless-offline

package:
  patterns:
    - '!node_modules/**'
    - '!src/**'
    - '!tests/**'
    - '!.git/**'
    - '!.vscode/**'
    - '!*.md'
    - '!*.log'

functions:
  processJobs:
    handler: src/handler.processJobs
    timeout: 900 # 15 minutes
    events:
      - schedule: rate(1 minute)
    memorySize: 256

custom:
  serverless-offline:
    httpPort: 3003
    lambdaPort: 3004